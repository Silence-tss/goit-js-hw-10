{"mappings":"iiBAEA,IAAAA,EAAAC,EAAA,S,mCAEeC,I,OAAAA,EAAfC,EAAAH,EAAA,CAAAG,EAAAC,GAAAC,MAAA,SAAAC,I,IAEUC,EACAC,E,4FADe,EAAAC,EAAAC,e,OAAfH,EAAMI,EAAAC,KACNJ,EAAcK,SAASC,cAAc,uBAE3CP,EAAOQ,SAAQ,SAAAC,GACb,IAAMC,EAASJ,SAASK,cAAc,UACtCD,EAAOE,MAAQH,EAAMI,GACrBH,EAAOI,YAAcL,EAAMM,KAC3Bd,EAAYe,YAAYN,E,IAG1BT,EAAYgB,iBAAiB,SAAUrB,EAAAH,EAAA,CAAAG,EAAAC,GAAAC,MAAA,SAAAoB,I,IAC/BC,E,yEAAAA,EAAkBlB,EAAYW,MAGpCQ,I,mBAGwB,EAAAlB,EAAAmB,iBAAgBF,G,OACtCG,EADaC,EAAAlB,M,gDAGbmB,QAAQC,MAAM,2BAA4BF,EAAAG,GAAMC,S,0GAIpDH,QAAQC,MAAM,kCAAmCrB,EAAAsB,GAAMC,S,0DA1BxBC,MAAAC,KAAAC,U,CA8BnC,SAASV,IACYd,SAASC,cAAc,gBAC/BwB,UAAY,E,CAGzB,SAAST,EAAeU,GACtB,IAAMC,EAAa3B,SAASC,cAAc,gBAEpC2B,EAAQ5B,SAASK,cAAc,OACrCuB,EAAMC,IAAMH,EAAQ,GAAGI,IAEqB,IAAtCC,EAAY/B,SAASK,cAAc,KACzC0B,EAAUvB,YAAc,UAAoCwB,OAA1BN,EAAQ,GAAGhC,OAAO,GAAGe,MAEvD,IAAMwB,EAAcjC,SAASK,cAAc,KAC3C4B,EAAYzB,YAAc,gBAAiDwB,OAAjCN,EAAQ,GAAGhC,OAAO,GAAGuC,aAE/D,IAAMC,EAAclC,SAASK,cAAc,KAC3C6B,EAAY1B,YAAc,gBAAiDwB,OAAjCN,EAAQ,GAAGhC,OAAO,GAAGwC,aAE/DP,EAAWjB,YAAYkB,GACvBD,EAAWjB,YAAYqB,GACvBJ,EAAWjB,YAAYuB,GACvBN,EAAWjB,YAAYwB,E,CAIsClC,SAAtDW,iBAAiB,oB,kBAzDXtB,EAAoBiC,MAAAC,KAAAC,U","sources":["src/index.js"],"sourcesContent":["// your-file.js\n\nimport { fetchBreeds, fetchCatByBreed } from './cat-api.js';\n\nasync function populateBreedsSelect() {\n  try {\n    const breeds = await fetchBreeds();\n    const breedSelect = document.querySelector('select.breed-select');\n\n    breeds.forEach(breed => {\n      const option = document.createElement('option');\n      option.value = breed.id;\n      option.textContent = breed.name;\n      breedSelect.appendChild(option);\n    });\n\n    breedSelect.addEventListener('change', async () => {\n      const selectedBreedId = breedSelect.value;\n\n      // Очистити блок з інформацією про кота перед новим запитом\n      clearCatInfo();\n\n      try {\n        const catInfo = await fetchCatByBreed(selectedBreedId);\n        displayCatInfo(catInfo);\n      } catch (error) {\n        console.error('Error fetching cat info:', error.message);\n      }\n    });\n  } catch (error) {\n    console.error('Error populating breeds select:', error.message);\n  }\n}\n\nfunction clearCatInfo() {\n  const catInfoDiv = document.querySelector('div.cat-info');\n  catInfoDiv.innerHTML = ''; // Очистити вміст блоку\n}\n\nfunction displayCatInfo(catInfo) {\n  const catInfoDiv = document.querySelector('div.cat-info');\n  \n  const image = document.createElement('img');\n  image.src = catInfo[0].url; // Припускається, що у відповіді є масив з одним об'єктом\n\n  const breedName = document.createElement('p');\n  breedName.textContent = `Breed: ${catInfo[0].breeds[0].name}`;\n\n  const description = document.createElement('p');\n  description.textContent = `Description: ${catInfo[0].breeds[0].description}`;\n\n  const temperament = document.createElement('p');\n  temperament.textContent = `Temperament: ${catInfo[0].breeds[0].temperament}`;\n\n  catInfoDiv.appendChild(image);\n  catInfoDiv.appendChild(breedName);\n  catInfoDiv.appendChild(description);\n  catInfoDiv.appendChild(temperament);\n}\n\n// Викликати функцію для заповнення вибору порід при завантаженні сторінки\ndocument.addEventListener('DOMContentLoaded', populateBreedsSelect);\n\n\n\n\n// import { fetchBreeds, fetchCatByBreed } from './cat-api.js';\n\n// async function populateBreedsSelect() {\n//   try {\n//     const breeds = await fetchBreeds();\n//     const breedSelect = document.querySelector('select.breed-select');\n\n//     breeds.forEach(breed => {\n//       const option = document.createElement('option');\n//       option.value = breed.id;\n//       option.textContent = breed.name;\n//       breedSelect.appendChild(option);\n//     });\n\n//     breedSelect.addEventListener('change', async () => {\n//       const selectedBreedId = breedSelect.value;\n\n//       // Очистити блок з інформацією про кота перед новим запитом\n//       clearCatInfo();\n\n//       try {\n//         const catInfo = await fetchCatByBreed(selectedBreedId);\n//         displayCatInfo(catInfo);\n//       } catch (error) {\n//         console.error('Error fetching cat info:', error.message);\n//       }\n//     });\n//   } catch (error) {\n//     console.error('Error populating breeds select:', error.message);\n//   }\n// }\n\n// function clearCatInfo() {\n//   const catInfoDiv = document.querySelector('div.cat-info');\n//   catInfoDiv.innerHTML = ''; // Очистити вміст блоку\n// }\n\n// function displayCatInfo(catInfo) {\n//   const catInfoDiv = document.querySelector('div.cat-info');\n  \n//   const image = document.createElement('img');\n//   image.src = catInfo[0].url; // Припускається, що у відповіді є масив з одним об'єктом\n\n//   const breedName = document.createElement('p');\n//   breedName.textContent = `Breed: ${catInfo[0].breeds[0].name}`;\n\n//   const description = document.createElement('p');\n//   description.textContent = `Description: ${catInfo[0].breeds[0].description}`;\n\n//   const temperament = document.createElement('p');\n//   temperament.textContent = `Temperament: ${catInfo[0].breeds[0].temperament}`;\n\n//   catInfoDiv.appendChild(image);\n//   catInfoDiv.appendChild(breedName);\n//   catInfoDiv.appendChild(description);\n//   catInfoDiv.appendChild(temperament);\n// }\n\n// // Викликати функцію для заповнення вибору порід при завантаженні сторінки\n// document.addEventListener('DOMContentLoaded', populateBreedsSelect);\n\n\n\n\n\n\n\n\n// const selectCat = document.querySelector(\".breed-select\");\n// const infoCat = document.querySelector(\".cat-info\");\n\n// async function populateBreedsSelect() {\n//   try {\n//     const breeds = await fetchBreeds();\n//     const breedSelect = document.querySelector(\".breed-select\");\n\n//     breeds.forEach(breed => {\n//       const option = document.createElement('option');\n//       option.value = breed.id;\n//       option.textContent = breed.name;\n//       breedSelect.appendChild(option);\n//     });\n//   } catch (error) {\n//     // Обробка помилок при виклику fetchBreeds()\n//     console.error('Error populating breeds select:', error.message);\n//   }\n// }\n\n// // Викликати функцію для заповнення вибору порід при завантаженні сторінки\n// document.addEventListener('DOMContentLoaded', populateBreedsSelect);\n\n\n// const url = `https://api.thecatapi.com/v1/breeds`;\n// const api_key = \"live_WlVxFm6pjr6g71AG4Z6iKEqVPy5ijV67NA9s17htumQVikwcatrTYPjcj4b4G1vX\"\n// let storedBreeds = []\n\n//  fetch(url,{headers: {\n//       'x-api-key': api_key\n//     }})\n//  .then((response) => {\n//    return response.json();\n//  })\n// .then((data) => {\n   \n//    //filter to only include those with an `image` object\n//    data = data.filter(img=> img.image?.url!=null)\n   \n//   storedBreeds = data;\n   \n//    for (let i = 0; i < storedBreeds.length; i++) {\n//     const breed = storedBreeds[i];\n//     let option = document.createElement('option');\n     \n//      //skip any breeds that don't have an image\n//      if(!breed.image)continue\n     \n//     //use the current array index\n//     option.value = i;\n//     option.innerHTML = `${breed.name}`;\n// document.getElementById('breed_selector').appendChild(option);\n    \n//     }\n//    //show the first breed by default\n//    showBreedImage(0)\n// })\n// .catch(function(error) {\n//    console.log(error);\n// });\n\n// function showBreedImage(index)\n// { \n//   document.getElementById(\"breed_image\").src= storedBreeds[index].image.url;\n  \n//   document.getElementById(\"breed_json\").textContent= storedBreeds[index].temperament\n  \n  \n//   document.getElementById(\"wiki_link\").href= storedBreeds[index].wikipedia_url\n//   document.getElementById(\"wiki_link\").innerHTML= storedBreeds[index].wikipedia_url\n// }\n\n// // new Vue({ \n// //     el: '#app',\n// //     vuetify: new Vuetify(),\n// //     data: {\n// //         country_flag_url:\"\",\n// //       images: [],\n// //       breeds:[],\n// //       selected_breed: {},\n// //       current_image: {}\n// //     },\n// //     created(){\n// //         this.getBreeds();\n// //     } ,\n// //     watch: {\n       \n// //         selected_breed: function()\n// //         {\n// //             console.log(this.selected_breed)\n\n// //             let country_code = this.selected_breed.country_code.toLowerCase();\n\n// //             this.country_flag_url = `https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.2.1/flags/1x1/${country_code}.svg`;\n// //             this.getImages();\n// //         }\n// //     },\n// //     methods:{\n\n// //         async getBreeds()\n// //         {\n// //             try{\n// //                 axios.defaults.headers.common['x-api-key'] = \"DEMO-API-KEY\" // Replace this with your API Key, as it's set to defaults it will be used from now onwards\n                \n// //                 let response = await axios.get('https://api.thecatapi.com/v1/breeds/' ) \n// //                 this.breeds = response.data;\n// //                 console.log(\"-- (\"+this.breeds.length +\") Breeds from TheCatAPI.com\")\n                \n// //                 // pick one to display initially\n// //                 this.selected_breed = this.breeds[10]\n// //             }catch(err){\n// //                 console.log(err)\n// //             }\n// //         },\n// //         async getImages()\n// //         {\n// //             try{\n                \n// //                 let query_params = {\n// //                     breed_ids: this.selected_breed.id,\n// //                     limit:8\n// //                 }\n\n// //                 let response = await axios.get('https://api.thecatapi.com/v1/images/search', { params: query_params} ) \n                \n// //                 this.pagination_count = response.headers['pagination-count'];\n// //                 this.images = response.data \n// //                 this.current_image = this.images[0]\n\n                \n\n// //                 console.log(\"-- (\"+this.images.length +\") Images from TheCatAPI.com\")\n// //                 console.log( this.pagination_count ,'images available for this query.')\n                \n// //             }catch(err){\n// //                 console.log(err)\n// //             }\n// //         }\n        \n// //     }\n// // })"],"names":["$bpxeT","parcelRequire","$b8f9b7833fa37166$var$_populateBreedsSelect","$parcel$interopDefault","$2TvXO","mark","_callee1","breeds","breedSelect","$eWrZJ","fetchBreeds","_ctx1","sent","document","querySelector","forEach","breed","option","createElement","value","id","textContent","name","appendChild","addEventListener","_callee","selectedBreedId","$b8f9b7833fa37166$var$clearCatInfo","fetchCatByBreed","$b8f9b7833fa37166$var$displayCatInfo","_ctx","console","error","t0","message","apply","this","arguments","innerHTML","catInfo","catInfoDiv","image","src","url","breedName","concat","description","temperament"],"version":3,"file":"index.f61aa38b.js.map"}
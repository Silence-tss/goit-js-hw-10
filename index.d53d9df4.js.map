{"mappings":"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","sources":["src/cat-api.js","node_modules/@swc/helpers/lib/_async_to_generator.js","node_modules/regenerator-runtime/runtime.js"],"sourcesContent":["// cat-api.js\n\nexport async function fetchBreeds() {\n    try {\n      const apiKey = 'live_WlVxFm6pjr6g71AG4Z6iKEqVPy5ijV67NA9s17htumQVikwcatrTYPjcj4b4G1vX'; // Замініть на свій API ключ\n      const apiUrl = 'https://api.thecatapi.com/v1/breeds';\n  \n      const response = await fetch(apiUrl, {\n        headers: {\n          'x-api-key': apiKey,\n        },\n      });\n  \n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n  \n      const breeds = await response.json();\n      return breeds;\n    } catch (error) {\n      console.error('Error fetching cat breeds:', error.message);\n      throw error;\n    }\n  }\n  \n  export async function fetchCatByBreed(breedId) {\n    try {\n      const apiKey = 'live_WlVxFm6pjr6g71AG4Z6iKEqVPy5ijV67NA9s17htumQVikwcatrTYPjcj4b4G1vX'; // Замініть на свій API ключ\n      const apiUrl = `https://api.thecatapi.com/v1/images/search?breed_ids=${breedId}`;\n  \n      const response = await fetch(apiUrl, {\n        headers: {\n          'x-api-key': apiKey,\n        },\n      });\n  \n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n  \n      const catInfo = await response.json();\n      return catInfo;\n    } catch (error) {\n      console.error('Error fetching cat info by breed:', error.message);\n      throw error;\n    }\n  }\n  \n\n\n\n\n// export async function fetchBreeds() {\n//     try {\n//         const apiKey = 'live_WlVxFm6pjr6g71AG4Z6iKEqVPy5ijV67NA9s17htumQVikwcatrTYPjcj4b4G1vX'; // Замініть на свій API ключ\n//         const apiUrl = 'https://api.thecatapi.com/v1/breeds';\n  \n//       const response = await fetch(apiUrl, {\n//         headers: {\n//           'x-api-key': apiKey,\n//         },\n//       });\n  \n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n  \n//       const breeds = await response.json();\n//       return breeds;\n//     } catch (error) {\n//       console.error('Error fetching cat breeds:', error.message);\n//       throw error;\n//     }\n//   }\n// //   // cat-api.js\n\n// export async function fetchBreeds() {\n//     try {\n//         const apiKey = 'live_WlVxFm6pjr6g71AG4Z6iKEqVPy5ijV67NA9s17htumQVikwcatrTYPjcj4b4G1vX'; // Замініть на свій API ключ\n//         const apiUrl = 'https://api.thecatapi.com/v1/breeds';\n  \n//       const response = await fetch(apiUrl, {\n//         headers: {\n//           'x-api-key': apiKey,\n//         },\n//       });\n  \n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n  \n//       const breeds = await response.json();\n//       return breeds;\n//     } catch (error) {\n//       console.error('Error fetching cat breeds:', error.message);\n//       throw error;\n//     }  }\n  \n//   export async function fetchCatByBreed(breedId) {\n//     try {\n//       const apiKey = 'live_WlVxFm6pjr6g71AG4Z6iKEqVPy5ijV67NA9s17htumQVikwcatrTYPjcj4b4G1vX'; // Замініть на свій API ключ\n//       const apiUrl = `https://api.thecatapi.com/v1/images/search?breed_ids=${breedId}`;\n  \n//       const response = await fetch(apiUrl, {\n//         headers: {\n//           'x-api-key': apiKey,\n//         },\n//       });\n  \n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n  \n//       const catInfo = await response.json();\n//       return catInfo;\n//     } catch (error) {\n//       console.error('Error fetching cat info by breed:', error.message);\n//       throw error;\n//     }\n//   }\n  \n\n// cat-api.js\n\n// export async function fetchBreeds() {\n//     try {\n//       const apiKey = 'live_WlVxFm6pjr6g71AG4Z6iKEqVPy5ijV67NA9s17htumQVikwcatrTYPjcj4b4G1vX'; // Замініть на свій API ключ\n//       const apiUrl = 'https://api.thecatapi.com/v1/breeds';\n  \n//       const response = await fetch(apiUrl, {\n//         headers: {\n//           'x-api-key': apiKey,\n//         },\n//       });\n  \n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n  \n//       const breeds = await response.json();\n      \n//       if (!Array.isArray(breeds)) {\n//         throw new Error('Response is not an array of breeds');\n//       }\n  \n//       return breeds;\n//     } catch (error) {\n//       console.error('Error fetching cat breeds:', error.message);\n//       throw error;\n//     }\n//   }\n  ","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _asyncToGenerator;\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$ae0c329fb0fb36dc$export$913382e0b15b5503","$ae0c329fb0fb36dc$var$_fetchBreeds","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","breeds","fetch","headers","_ctx","sent","ok","Error","concat","status","json","console","error","t0","message","$ae0c329fb0fb36dc$export$57b7d3a597416aa2","breedId","$ae0c329fb0fb36dc$var$_fetchCatByBreed","apiUrl","catInfo","$84ebd01c1ddf4bef$var$asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","Object","defineProperty","module","exports","default","fn","self","args","err","undefined","$21b983287c82ebd3$var$runtime","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","enumerable","configurable","writable","err1","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","value1","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","next1","displayName","isGeneratorFunction","genFun","ctor","constructor","name","setPrototypeOf","__proto__","awrap","async","iter","keys","object","key1","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function"],"version":3,"file":"index.d53d9df4.js.map"}